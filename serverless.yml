# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ice-pipelines
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: provided.al2023
  architecture: arm64 

  iam:
    role:
      statements:
        - Effect: Allow
          Action: 
            - secretsmanager:GetSecretValue
          Resource: arn:aws:secretsmanager:us-east-1:271463937680:secret:farm/mysql-Rpzei2

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  individually: true

functions:
  processGame:
    handler: bootstrap
    package:
      artifact: build/lambda/process-game.zip
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - IceGameQueue
              - Arn
          batchSize: 1
    timeout: 60
    reservedConcurrency: 40
  processPlayerSeasonTotals:
    handler: bootstrap
    package:
      artifact: build/lambda/process-player-season-totals.zip
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - IcePlayerSeasonTotalsQueue
              - Arn
          batchSize: 1
    timeout: 60
    reservedConcurrency: 40
  processPlayer:
    handler: bootstrap
    package:
      artifact: build/lambda/process-player.zip
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PlayerQueue
              - Arn
          batchSize: 1
    timeout: 60
    reservedConcurrency: 40
     
  # processDayGames:
  #   handler: bin/schedule-games
  #   events:
  #     - schedule: cron(0 12 * * ? *)

resources:
  Resources:
    IceGameQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "ice-game-queue"
        VisibilityTimeout: 70
    IcePlayerSeasonTotalsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "ice-player-season-totals-queue"
        VisibilityTimeout: 70
    PlayerQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "player-queue"
        VisibilityTimeout: 70
